{"version":3,"sources":["helpers/generalHelper.js","views/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["url","axiosConfig","withCredentials","getTotal","data","a","axios","create","baseURL","post","resp","Home","props","state","selectedItems","total","selectedItem","this","setState","response","selectedItemsCopy","filter","stateSelectedItem","className","name","price","map","food","index","onClick","setSelectedItems","drink","setTotal","removeSelectedItems","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab529196.chunk.js","sourcesContent":["import axios from 'axios'\nconst url = 'http://2d22-41-216-201-81.ngrok.io'\nconst axiosConfig = {\n    withCredentials: true,\n}\n\nexport const getAxiosInstance = () => {\n    return axios.create({ baseURL: url })\n}\n\nexport const getTotal = async (data) => {\n    const resp = await getAxiosInstance().post(`${url}${'/api/getTotal'}`, data, axiosConfig)\n    return resp\n}\n","import React, { Component } from 'react'\nimport { getTotal } from '../../helpers/generalHelper'\nimport './Home.scss'\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedItems: [],\n            total: 0\n        }\n    }\n\n    setSelectedItems(selectedItem) {\n        this.setState({ selectedItems: [...this.state.selectedItems, selectedItem] })\n    }\n\n    async setTotal() {\n        // TODO: set total value\n        const response  = await getTotal(this.state.selectedItems)\n\n        this.setState({ total: response?.data?.total })\n    }\n\n    removeSelectedItems(selectedItem) {\n        // TODO: remove selected item from list\n        const selectedItemsCopy = this.state.selectedItems.filter((stateSelectedItem) => stateSelectedItem !== selectedItem)\n        this.setState({ selectedItems: selectedItemsCopy })\n    }\n\n    render() {\n        const header = 'Tuck Shop'\n\n        // TODO (optional): create api to send foods and drinks then set variables with data returned from api call\n        const foods = [\n            {\n                name: 'Pie',\n                price: 12\n            },\n            {\n                name: 'Burger',\n                price: 15\n            },\n            {\n                name: 'Pizza',\n                price: 20\n            },\n        ]\n        const drinks = [\n            {\n                name: 'Coke',\n                price: 12\n            },\n            {\n                name: 'Water',\n                price: 10\n            },\n            {\n                name: 'Ice Tea',\n                price: 14\n            },\n        ]\n\n        return (\n            <div className={'home'}>\n                <div className={'header'}>{header}</div>\n                <div className={'columns'}>\n                    <div className={'column'}>\n                        {\n                            foods.map((food, index) => {\n                                return(\n                                    <li className={'tuck-shop-item'} key={index} onClick={() => this.setSelectedItems(food)}>\n                                        {food?.name + ' R' + food?.price}\n                                    </li>\n                                )\n                            })\n                        }\n                    </div>\n                    <div className={'column'}>\n                        {\n                            drinks.map((drink, index) => {\n                                return(\n                                    <li className={'tuck-shop-item'} key={index} onClick={() => this.setSelectedItems(drink)}>\n                                        {drink?.name + ' R' + drink?.price}\n                                    </li>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <div className={'calculator'}>\n                    <div className={'calculator-title'}>\n                        {'Total: R' + this.state.total}\n                    </div>\n                    <button\n                        className={'calculate-button'}\n                        onClick={()=>this.setTotal()}\n                    >\n                        {'Calculate'}\n                    </button>\n                    <div className={'column'}>\n                        {\n                            this.state.selectedItems.map((selectedItem, index) => {\n                                return(\n                                    <li className={'tuck-shop-item'} key={index} onClick={() => this.removeSelectedItems(selectedItem)}>\n                                        {selectedItem?.name + ' R' + selectedItem?.price}\n                                    </li>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './App.scss'\nimport Home from './views/Home/Home'\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div className={'App'}>\n                <Home/>\n            </div>\n        )\n    }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}